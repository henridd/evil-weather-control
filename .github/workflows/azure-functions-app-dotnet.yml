name: Build, test and deploy Deploy DotNet project to Azure Function App

on:
  push:
    branches: [ "main" ]

env:
  AZURE_FUNCTIONAPP_NAME: tfewc-function
  AZURE_FUNCTIONAPP_PACKAGE_PATH: EvilWeatherControlApp\published
  CONFIGURATION: Release
  DOTNET_VERSION: 6.0.x
  WORKING_DIRECTORY: EvilWeatherControlApp
  TESTING_DIRECTORY: EvilWeatherControlApp.Tests

jobs:
  terraform:
    name: "Terraform"
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          cli_config_credentials_token: ${{ secrets.TF_API_TOKEN }}          

      - name: Terraform Init
        working-directory: ./Terraform
        id: init
        run: terraform init
      
      - name: Terraform Validate
        working-directory: ./Terraform
        id: validate
        run: terraform validate -no-color

      - name: Terraform Apply
        working-directory: ./Terraform
        run: terraform apply -auto-approve -input=false

  build-and-deploy:
    runs-on: windows-latest 
    needs:
        - terraform
    steps:
    - name: 'Checkout GitHub Action'
      uses: actions/checkout@v3   

    - name: Setup DotNet ${{ env.DOTNET_VERSION }} Environment
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: ${{ env.DOTNET_VERSION }}

    - name: 'Login via Azure CLI'
      uses: azure/login@v1
      with:
        creds: ${{ secrets.AZURE_RBAC_CREDENTIALS }}

    - name: Build
      run: dotnet build "${{ env.WORKING_DIRECTORY }}" --configuration ${{ env.CONFIGURATION }}
      
    - name: Test
      run: dotnet test "${{ env.TESTING_DIRECTORY }}" --verbosity normal
      
    - name: Publish
      run: dotnet publish "${{ env.WORKING_DIRECTORY }}" --configuration ${{ env.CONFIGURATION }} --no-build --output "${{ env.AZURE_FUNCTIONAPP_PACKAGE_PATH }}"

    - name: 'Run Azure Functions Action'
      uses: Azure/functions-action@v1
      id: fa
      with:
        app-name: ${{ env.AZURE_FUNCTIONAPP_NAME }}
        package: ${{ env.AZURE_FUNCTIONAPP_PACKAGE_PATH }}